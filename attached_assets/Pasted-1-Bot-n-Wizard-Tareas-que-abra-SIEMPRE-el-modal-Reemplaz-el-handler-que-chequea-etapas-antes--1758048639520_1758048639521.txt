1) Botón “Wizard Tareas” — que abra SIEMPRE el modal

Reemplazá el handler que chequea etapas antes de abrir:

// ❌ NO: esto fuerza selección previa fuera del wizard
// if (!document.querySelectorAll('#tabla-etapas input[type=checkbox]:checked').length) {
//   alert('Selecciona al menos una etapa');
//   return;
// }

document.getElementById('btnWizardTareas').addEventListener('click', async () => {
  resetWizardState();               // limpia estado interno del wizard
  $('#wizardModal').modal('show');  // abre modal
  await cargarEtapasPaso1();        // trae etapas y renderiza checkboxes del Paso 1
});

2) Paso 1 del Wizard — cargar y (si hace falta) crear etapas ahí mismo
a) Traer etapas de la obra
async function cargarEtapasPaso1() {
  const r = await fetch(`/api/obras/${obraId}/etapas`);
  const data = await r.json(); // { etapas: [{id,nombre}, ...] }
  renderEtapasChecklist(data.etapas); // arma los checkboxes dentro del wizard
}

b) Si no hay etapas, ofrecer “+ Crear etapa rápida” dentro del Paso 1

HTML minimal:

<div id="paso1-etapas"></div>
<div class="mt-2">
  <button class="btn btn-sm btn-outline-primary" onclick="abrirNuevaEtapa()">+ Crear etapa</button>
</div>

<div id="nuevaEtapaForm" class="mt-2 d-none">
  <input id="newEtapaNombre" class="form-control form-control-sm" placeholder="Nombre de la etapa">
  <div class="mt-2 d-flex gap-2">
    <button class="btn btn-sm btn-primary" onclick="crearEtapaRapida()">Guardar</button>
    <button class="btn btn-sm btn-light" onclick="cerrarNuevaEtapa()">Cancelar</button>
  </div>
</div>


JS + endpoint:

function abrirNuevaEtapa(){ document.getElementById('nuevaEtapaForm').classList.remove('d-none'); }
function cerrarNuevaEtapa(){ document.getElementById('nuevaEtapaForm').classList.add('d-none'); }

async function crearEtapaRapida(){
  const nombre = document.getElementById('newEtapaNombre').value.trim();
  if(!nombre) return;
  const r = await fetch(`/api/obras/${obraId}/etapas`, {
    method:'POST', headers:{'Content-Type':'application/json'},
    body: JSON.stringify({ nombre })
  });
  const e = await r.json(); // {id,nombre}
  // agregar el checkbox al listado y tildarlo
  appendEtapaCheckbox(e);
  cerrarNuevaEtapa();
}


Si ya tenés endpoints para etapas, reutilizalos (GET lista, POST crear). Si no, te paso uno rápido.

3) Validación “Siguiente” dentro del wizard (no antes)

El botón Siguiente en Paso 1 valida ahí mismo; no al abrir el modal:

document.getElementById('wizardBtnSiguiente').addEventListener('click', async () => {
  if (wizardPasoActual !== 1) return avanzarPaso();

  const etapaIds = [...document.querySelectorAll('#paso1-etapas input[type=checkbox]:checked')].map(i => +i.value);
  if (!etapaIds.length) {
    mostrarErrorPaso1('Seleccioná al menos una etapa');
    return;
  }
  window.WIZARD = { obra_id: obraId, etapa_ids: etapaIds };
  const r = await fetch('/api/wizard-tareas/preview', {
    method:'POST', headers:{'Content-Type':'application/json'},
    body: JSON.stringify({ obra_id: obraId, etapa_ids: etapaIds })
  });
  window.WIZARD.preview = await r.json();
  avanzarPaso(); // → render Paso 2
});

(Opcional) ¿Querés permitir tareas “sin etapa”?

Agregá un toggle “Crear tareas sueltas (sin etapa)” en Paso 1.
Si lo tildan, dejá avanzar aunque no haya checkboxes; en el payload de creación mandá etapa_id: null.
Si no, mantené la regla: mínimo una etapa seleccionada (pero dentro del wizard, no afuera).

Endpoints mínimos si te faltan
# GET /api/obras/<obra_id>/etapas
return jsonify({"etapas": [{"id": e.id, "nombre": e.nombre} for e in Etapa.query.filter_by(obra_id=obra_id).all()]})

# POST /api/obras/<obra_id>/etapas
data = request.get_json()
e = Etapa(obra_id=obra_id, nombre=data["nombre"])
db.session.add(e); db.session.commit()
return jsonify({"id": e.id, "nombre": e.nombre})