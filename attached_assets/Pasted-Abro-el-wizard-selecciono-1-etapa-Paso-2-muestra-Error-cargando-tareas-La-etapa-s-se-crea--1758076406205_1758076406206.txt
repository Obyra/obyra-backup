Abro el wizard → selecciono 1 etapa → Paso 2 muestra “Error cargando tareas”.

La etapa sí se crea, pero no carga el listado de tareas para esa(s) etapa(s).

✅ Qué hay que arreglar (concreto, sin código)

Persistencia de etapas seleccionadas

Tras POST /obras/api/obras/:obra_id/etapas/bulk_from_catalog, guardar SIEMPRE los IDs reales en window.WIZARD.etapa_ids (creadas + existentes).

Esta variable debe estar definida antes de llamar al preview.

Preview con payload y prefijo correctos

La UI llama a POST /obras/api/wizard-tareas/preview con body JSON:

{ "obra_id": <id>, "etapa_ids": [ ... ] }


Todas las rutas del wizard deben usar prefijo /obras y responder application/json (nunca HTML/redirect).

Respuesta del preview en el formato que la UI espera

El endpoint debe devolver 200 OK y JSON con estas claves (no nulas):

{
  "ok": true,
  "obra_id": <id>,
  "etapas": [ { "id":..., "nombre":"...", "slug":"..." } ],
  "catalogo_por_etapa": { "<etapa_id>": [ { "id":..., "nombre":"...", "unidad":"m2|m3|ml|...", "horas_default":..., "cantidad_default":..., "prioridad":... } ] },
  "tareas_existentes_por_etapa": { "<etapa_id>": [ { "id":..., "nombre":"..." } ] }
}


Importante: las claves de catalogo_por_etapa y tareas_existentes_por_etapa deben ser IDs de etapa (números en string) que correspondan a los que están en window.WIZARD.etapa_ids. Si devuelven slugs o nombres, la UI no matchea y aparece “Error cargando tareas”.

Navegación del wizard

Exponer un alias global para avanzar (ej.: window.gotoPaso(n) → llama a goToStep(n) interno) y usarlo tras preview OK para posicionar en Paso 2.

Debe desaparecer el aviso “No se encontró función de navegación para el wizard”.

Mensajes

Quitar/ocultar el mensaje legacy en rojo (“Primero debes agregar etapas…”). Los errores deben venir del JSON real del preview.

🔎 Cómo lo vamos a validar (QA rápido)

Consola:
Tras seleccionar etapas en Paso 1, ejecutar:
window.WIZARD && window.WIZARD.etapa_ids → debe mostrar [n, m] (IDs numéricos).

Network (DevTools):

Ver el POST /obras/api/wizard-tareas/preview con payload { obra_id, etapa_ids:[...] } y Content-Type: application/json.

Respuesta 200 con el JSON en el formato indicado arriba (claves por ID de etapa, arrays nunca nulos).

UI Paso 2:

Carga el acordeón/listado de tareas del catálogo y marca aparte las existentes.

Sin pop-ups de error. Se habilita Siguiente.