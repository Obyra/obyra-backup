Bug Paso 1 – etapa_ids vacío (400)
El contador de seleccionadas se actualiza desde estado interno, pero el POST usa un collector que busca input[type="checkbox"]:checked o DOM marcados; en el modal no hay checkboxes ni clases de selección. Resultado: etapa_ids: [].

Solución (una sola fuente de verdad)

Asegurar que cada card de etapa tenga identificadores de datos:

<div class="etapa-card" data-etapa-id="{{ etapa.id }}" data-etapa-slug="{{ etapa.slug }}">
  <!-- contenido -->
</div>


Exponer/crear estado global simple:

window.WZ = window.WZ || {};
WZ.state = WZ.state || { selectedEtapaIds: [] };


Delegación para togglear selección por card (actualiza estado + clase visual):

document.addEventListener('click', (ev) => {
  const card = ev.target.closest('[data-wz-step="1"] .etapa-card, #wizardStep1 .etapa-card');
  if (!card) return;
  const id = Number(card.dataset.etapaId);
  if (!id) return;

  const arr = WZ.state.selectedEtapaIds;
  const i = arr.indexOf(id);
  if (i === -1) { arr.push(id); card.classList.add('selected'); }
  else { arr.splice(i,1); card.classList.remove('selected'); }

  updateStep1Counter?.(arr.length);  // actualizar badge si existe
}, { capture: true });


Collector canónico para usar en contador y en el POST:

function getSelectedEtapaIds() {
  // Si existieran checkboxes reales, también los soportamos:
  const STEP1 = '[data-wz-step="1"],#wizardStep1,#wizard-paso1,#paso1';
  const fromInputs = [...document.querySelectorAll(`${STEP1} input[type="checkbox"]:checked`)]
    .map(cb => Number(cb.dataset.etapaId || cb.value))
    .filter(Boolean);

  const fromState = (WZ.state?.selectedEtapaIds || []).filter(Boolean);
  return [...new Set(fromInputs.length ? fromInputs : fromState)];
}


Paso 1 → Paso 2 (Agregar/Siguiente) usa SIEMPRE el collector anterior:

document.addEventListener('click', async (ev) => {
  const btn = ev.target.closest('#wizard-add-etapas,#wizard-next-step1');
  if (!btn) return;
  ev.preventDefault(); ev.stopPropagation(); ev.stopImmediatePropagation?.();

  const etapa_ids = getSelectedEtapaIds();
  if (!etapa_ids.length) { alert('Seleccioná al menos una etapa.'); return; }

  const payload = { obra_id: window.obraId, etapa_ids };
  const r = await fetch(api('obras/api/wizard-tareas/preview'), {
    method:'POST',
    headers:{'Content-Type':'application/json'},
    credentials:'same-origin',
    body: JSON.stringify(payload)
  });
  const j = await r.json();
  if (!r.ok || !j.ok) { console.error(j); alert(j.error||'No se pudo continuar'); return; }

  gotoPaso(2);
}, { capture: true });


Botones de Paso 1 NO deben enviar formularios:

<button id="wizard-add-etapas" type="button">Agregar Etapas Seleccionadas</button>
<button id="wizard-next-step1"  type="button">Siguiente</button>


No tocar: delegación de Finalizar/Confirmar, helper api() (rutas absolutas), Paso 2 por catálogo, placeholder “— Seleccioná —” en Paso 3, y gotoPaso robusto.

QA

Tildar una card → WZ.state.selectedEtapaIds refleja el ID; el contador cambia.

Click Siguiente → POST /wizard-tareas/preview con {"obra_id":…, "etapa_ids":[…]} (no vacío) → navega a Paso 2.