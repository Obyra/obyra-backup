1) Adapter de navegación (mata el error gotoPaso)

Ponelo una sola vez arriba del JS del wizard:

// === Adapter de navegación de pasos ===
(function () {
  // Si no existe gotoPaso, lo mapeamos a la función real del wizard
  if (typeof window.gotoPaso !== 'function') {
    if (window.wizardTareas?.goToStep) {
      window.gotoPaso = step => window.wizardTareas.goToStep(step);
    } else if (typeof window.goToStep === 'function') {
      window.gotoPaso = window.goToStep;
    } else if (typeof window.wizardGoToStep === 'function') {
      window.gotoPaso = window.wizardGoToStep;
    } else if (typeof window.nextStep === 'function') {
      // Fallback: avanza llamando nextStep() hasta llegar
      window.gotoPaso = function (step) {
        if (typeof window.wizardPasoActual === 'number') {
          while (window.wizardPasoActual < step) window.nextStep();
        } else {
          window.nextStep();
        }
      };
    } else {
      console.warn('No se encontró función de navegación para el wizard.');
      window.gotoPaso = function () {}; // evita crash si algo falta
    }
  }
})();

2) Event delegation para los checkboxes dinámicos

Asegurate que el contenedor del grid tenga id="wizardPaso1Container".
Luego, escuchamos cambios ahí (auto-avance con debounce):

// Auto-crear/recuperar y pasar a Paso 2 al tildar/destildar
document.getElementById('wizardPaso1Container')?.addEventListener('change', (ev) => {
  if (!ev.target.matches('.etp, .catalog-checkbox')) return;
  clearTimeout(window.__wdeb);
  window.__wdeb = setTimeout(applyCatalogAndAdvance, 300);
});


applyCatalogAndAdvance() debe terminar con gotoPaso(2) cuando todo sale OK.

3) “Siguiente” y botón verde hacen lo mismo (opcional)
document.getElementById('btnAgregarEtapasSel')?.addEventListener('click', (e)=>{
  e.preventDefault(); applyCatalogAndAdvance();
});
document.getElementById('wizardBtnSiguiente')?.addEventListener('click', (e)=>{
  if (window.wizardPasoActual === 1) { e.preventDefault(); applyCatalogAndAdvance(); }
});

4) Ocultar el mensaje rojo estático legacy

Ese texto viejo confunde. Ocultalo (o borrarlo del template):

document.querySelectorAll('.wizard-legacy-note').forEach(el => el.remove());
// o CSS: .wizard-legacy-note { display:none !important; }


(Agregale la clase wizard-legacy-note al <p>/div que muestra “Primero debes agregar etapas…”).

5) Contenedor de errores “real”

En el Paso 1 tiene que existir:

<div id="wizardPaso1Warning" class="text-danger small mt-2"></div>


Y en el JS mostrar ahí los errores:

function showWarn(msg){ const n = document.getElementById('wizardPaso1Warning'); if(n) n.textContent = msg; else alert(msg); }
function clearWarn(){ const n = document.getElementById('wizardPaso1Warning'); if(n) n.textContent = ''; 