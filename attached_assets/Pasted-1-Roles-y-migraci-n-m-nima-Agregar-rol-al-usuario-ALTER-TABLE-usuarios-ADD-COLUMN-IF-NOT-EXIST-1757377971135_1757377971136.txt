1) Roles y migración mínima

Agregar rol al usuario:

ALTER TABLE usuarios
  ADD COLUMN IF NOT EXISTS role VARCHAR(20)
    DEFAULT 'operario'
    CHECK (role IN ('admin','pm','operario'));


admin: controla todo.

pm: (jefe de obra) controla la obra y sus tareas.

operario: sólo registra avances en tareas asignadas.

Opcional (si se necesita PM por obra y no global):
Crear tabla para miembros de obra:

CREATE TABLE IF NOT EXISTS obra_miembros (
  id SERIAL PRIMARY KEY,
  obra_id INT NOT NULL REFERENCES obras(id) ON DELETE CASCADE,
  user_id INT NOT NULL REFERENCES usuarios(id),
  rol VARCHAR(20) NOT NULL DEFAULT 'pm',
  UNIQUE (obra_id, user_id)
);

2) Helpers de permiso (backend)

En el blueprint de obras, agregar helpers:

def is_admin():
    return getattr(current_user, "role", "") == "admin"

def is_pm_global():
    return getattr(current_user, "role", "") in ("admin", "pm")

def can_manage_obra(obra):
    # si usan obra_miembros, chequear acá
    return is_admin() or is_pm_global()

def can_log_avance(tarea):
    if is_admin():
        return True
    if getattr(current_user, "role", "") == "pm":
        return True  # PM puede cargar correcciones si hace falta; si no, devolver False
    # Operario: responsable o asignado en tarea_miembros
    if tarea.responsable_id == current_user.id:
        return True
    return any(m.user_id == current_user.id for m in tarea.miembros)

3) Guardas en endpoints (backend)

Añadir estos checks (403 si no cumple):

Crear/editar/eliminar etapas y tareas:

/obras/tareas/crear

/obras/tareas/eliminar/<id>

/obras/tareas/bulk_delete

/obras/etapas/bulk_delete

/obras/tareas/bulk_asignar

Check: can_manage_obra(obra)

Registrar avance + fotos:

/obras/tareas/<int:tarea_id>/avances

Check: can_log_avance(tarea)

Completar tarea:

/obras/tareas/<int:tarea_id>/complete

Check: can_manage_obra(obra)
(o permitir también al responsable si el ejecutado ≥ planificado; a definir)

Nota: ya tenemos tarea_miembros y tarea_avances. Sólo hay que usar can_* en cada endpoint.

4) Qué ve cada uno (frontend)

En templates/obras/detalle.html, pasar flags desde el backend:

return render_template(
  "obras/detalle.html",
  obra=obra,
  can_manage=can_manage_obra(obra),
  current_user_id=current_user.id
)

4.1 Admin / PM (can_manage=True)

Ver y usar:

Botón Seleccionar (etapas/tareas) y Eliminar seleccionadas

Botón Asignar usuarios

Botón + Agregar (etapas/tareas)

Selector de estado y ícono de eliminar en cada fila

Checkboxes de selección (etapas/tareas)

Puede abrir “Nueva Tarea”, setear fechas planificadas, responsable, etc.

Implementación: envolver estos bloques con:

{% if can_manage %}
  <!-- botones: Seleccionar, Eliminar seleccionadas, Asignar usuarios, +Agregar -->
  <!-- checkboxes .task-check, dropdown de estado, ícono de papelera -->
{% endif %}

4.2 Operario (role='operario')

No ve: Seleccionar, Eliminar seleccionadas, Asignar usuarios, +Agregar, dropdown de estado, papelera, checkboxes.

Sí ve:

Lista de tareas de la obra en modo lectura

Sólo en tareas donde responsable_id == current_user.id o está en tarea_miembros, mostrar botón “+ Avance” (y permitir abrir el modal).

(Opcional) Toggle “Sólo mis tareas” (por defecto activado) que filtre las no asignadas.

Implementación:
En cada tarjeta de tarea:

{% set yo_asignado = (tarea.responsable_id == current_user_id) or
                     (tarea.miembros|selectattr('user_id','equalto',current_user_id)|list|length > 0) %}

{% if can_manage or yo_asignado %}
  <button class="btn btn-outline-primary btn-sm">+ Avance</button>
{% endif %}

5) Seguridad visual (JS)

Si can_manage=False, no ejecutar JS de selección múltiple/bulk (proteger con:

{% if can_manage %}
<script>/* bulk JS aquí */</script>
{% endif %}


).

Mantener el modal de Registrar Avance siempre, pero sólo habilitar apertura si yo_asignado (o can_manage).

6) Reglas de negocio (resumen)

Operario: sólo registra avances en sus tareas (cantidad + fotos + notas).

PM/Admin: asignan usuarios, cambian estado, crean/elim., completan tarea.

Al primer avance: setear fecha_inicio_real.

Al completar (o cuando ejecutado ≥ planificado): setear fecha_fin_real.

Badge “Atrasada” si hoy > fecha_fin_plan y queda pendiente.

“Mis Tareas”: lista consolidada de tareas (responsable o miembro) del usuario logueado.

7) QA / Casos de prueba

Admin entra a obra ⇒ ve todos los controles y puede crear/editar/eliminar/asignar.

PM entra ⇒ igual que admin (o el alcance que definamos).

Operario entra ⇒ no ve controles de gestión; sólo “+ Avance” en tareas asignadas/responsable.

Operario intenta abrir /obras/tareas/bulk_asignar o eliminar vía POST ⇒ 403.

Operario registra avance con 2 fotos ⇒ se guarda, progreso sube, aparece fecha_inicio_real.

PM completa tarea ⇒ fecha_fin_real se setea, estado completada.

Filtrar “Sólo mis tareas” muestra sólo las asignadas/responsable.

Extras chiquitos (si da el tiempo)

En la cabecera de la obra:
“Mis tareas asignadas: N” y un switch “Sólo mis tareas”.

En cada tarea: badge con responsable (si hay).