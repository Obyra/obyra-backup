Bug “Asignar Usuario” no refleja el equipo

Qué pasa ahora (repro simple):

Entrar a /obras/<id>.

Click Asignar Usuario, elegir un usuario y confirmar.

En Network se ve el POST a /obras/<id>/asignar_usuario (sin error).

Problema: al cerrar el modal, “Equipo Asignado” sigue vacío (no refresca / no repinta). A veces la respuesta es {"ok":true,"creados":0}.

Qué debería pasar:

Si el POST devuelve ok:true y creados>0, el usuario tiene que aparecer en la grilla (o recargar la página).

Si no se envió usuario, el backend debe devolver 400 con mensaje claro (no ok:true).

✅ Qué arreglar
1) Frontend (modal “Asignar Usuario”)

Interceptar el submit y mandar AJAX con FormData.

Enviar user_ids[] (no usuario_id) y opcionales rol y etapa_id.

Si data.ok === true, recargar la página o repintar la sección “Equipo Asignado”.

// templates/obras/detalle.html (antes de </script>)
document.getElementById('btnAsignarObra').addEventListener('click', async (e) => {
  e.preventDefault();
  const obraId   = {{ obra.id }};
  const usuario  = document.querySelector('#modalAsignar select[name="usuario_id"]')?.value;
  const rol      = document.querySelector('#modalAsignar select[name="rol_obra"]')?.value;
  const etapa    = document.querySelector('#modalAsignar select[name="etapa_id"]')?.value;

  if (!usuario) { alert('Seleccioná un usuario'); return; }

  const fd = new FormData();
  fd.append('user_ids[]', usuario);
  if (rol)   fd.append('rol', rol);
  if (etapa) fd.append('etapa_id', etapa);

  const res  = await fetch(`/obras/${obraId}/asignar_usuario`, { method:'POST', body: fd, credentials:'include' });
  const data = await res.json();

  if (!data.ok) { alert(data.error || 'No se pudo asignar'); return; }
  // opción simple: refrescar
  window.location.reload();
  // (o repintar la grilla con un GET /obras/<id>/miembros si lo tienen)
});

2) Backend (defensivo en el endpoint)

Aceptar user_ids[] y, como fallback, usuario_id.

Si no hay ids → 400 con mensaje.

Responder con conteo útil para el UI.

user_ids = request.form.getlist('user_ids[]') or request.form.getlist('user_ids') or []
fallback = request.form.get('usuario_id')
if fallback:
    user_ids.append(fallback)

if not user_ids:
    return jsonify(ok=False, error="Seleccioná al menos un usuario"), 400

# insertar con ON CONFLICT DO NOTHING
creados = 0
for uid in user_ids:
    # ... insert ...
    # si se creó: creados += 1

return jsonify(ok=True, creados=creados, ya_existian=len(user_ids)-creados)

✅ Criterios de aceptación

En Network se ve POST /obras/<id>/asignar_usuario con Form Data: user_ids[]: <id>.

Respuesta: {"ok":true,"creados":N,"ya_existian":M}.

Tras el éxito, el usuario aparece en “Equipo Asignado” (o la página se recarga automáticamente).

Si no se elige usuario, el endpoint devuelve 400 con {"ok":false,"error":"Seleccioná al menos un usuario"}.