Objetivo: En el modal “Registrar Avance” reemplazar el chip fijo “un” por un select de unidades. El select debe venir preseleccionado con la unidad base de la tarea y enviarse con el form.

1) HTML del modal (en ambos templates: templates/obras/mis_tareas.html y templates/obras/detalle.html)

Sustituir el bloque de “Cantidad ejecutada” por esto:

<label for="cantidad" id="lbl-cantidad" class="form-label">Cantidad ejecutada *</label>
<div class="input-group">
  <input id="cantidad" name="cantidad" type="number" step="0.01" min="0" class="form-control" required>
  <select id="unidad_ingresada" name="unidad_ingresada" class="form-select" style="max-width:120px">
    <option value="m2">m²</option>
    <option value="ml">ml</option>
    <option value="m3">m³</option>
    <option value="un">un</option>
    <option value="h">h</option>
    <option value="kg">kg</option>
  </select>
</div>

<input type="hidden" id="unidad_base" value="">
<input type="hidden" id="tarea_id" name="tarea_id" value="">
<input type="hidden" id="rendimiento" value="">

2) Botón que abre el modal

Asegurarse de pasar la unidad base de cada tarea en data-*:

<button type="button" class="btn btn-primary btn-avance"
        data-bs-toggle="modal" data-bs-target="#modalAvance"
        data-tarea-id="{{ t.id }}"
        data-unidad="{{ t.unidad or 'un' }}"
        data-rendimiento="{{ t.rendimiento or '' }}"
        data-tarea-nombre="{{ t.nombre|e }}">
  + Registrar Avance
</button>

3) JS al abrir el modal (Bootstrap show.bs.modal)

Preseleccionar el select con la unidad base de la tarea y setear IDs:

<script>
(() => {
  const modal = document.getElementById('modalAvance');
  modal.addEventListener('show.bs.modal', (ev) => {
    const btn = ev.relatedTarget;
    const base = btn?.dataset?.unidad || 'un';
    const r    = btn?.dataset?.rendimiento || '';
    const id   = btn?.dataset?.tareaId || '';

    document.getElementById('unidad_base').value = base;
    document.getElementById('tarea_id').value    = id;
    document.getElementById('rendimiento').value = r;

    const sel = document.getElementById('unidad_ingresada');
    if ([...sel.options].some(o => o.value === base)) sel.value = base;
  });
})();
</script>

4) Backend (mínimo)

Leer unidad_ingresada del form y guardar junto a la cantidad (para auditoría).

Por ahora, si unidad_ingresada != tarea.unidad, rechazar con error 400 (sin conversiones).
(Si luego quieren conversión, lo hacemos en una segunda etapa.)

Ejemplo:

unidad_ing = request.form.get('unidad_ingresada')
tarea = TareaEtapa.query.get(tarea_id)
if unidad_ing != tarea.unidad:
    return jsonify(ok=False, error=f"Unidad incompatible: {unidad_ing} vs {tarea.unidad}"), 400
# guardar avance usando tarea.unidad como unidad final

5) Criterios de aceptación

El modal muestra un select con: m², ml, m³, un, h, kg.

Al abrir, el select queda preseleccionado con la unidad de la tarea.

En consola, los botones muestran data-unidad correcto (m2/ml/m3, etc.).

Enviar con unidad distinta devuelve error claro “Unidad incompatible…”.

(Opcional) Registrar unidad_ingresada para auditoría.