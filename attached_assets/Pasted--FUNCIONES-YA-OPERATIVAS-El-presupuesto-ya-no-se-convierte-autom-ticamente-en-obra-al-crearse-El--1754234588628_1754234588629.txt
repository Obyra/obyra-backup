✅ FUNCIONES YA OPERATIVAS
El presupuesto ya no se convierte automáticamente en obra al crearse.

El botón "Confirmar como Obra" aparece correctamente cuando el estado es “borrador”.

Al confirmar, se genera correctamente una obra con sus etapas y tareas precargadas.

Se evita la duplicación de etapas o tareas si ya existen.

El workflow de creación desde presupuesto a obra está funcional.

🧹 AJUSTES NECESARIOS
🔴 0. Eliminar el presupuesto una vez confirmado como obra
Situación actual:
El presupuesto sigue figurando en el módulo de “Presupuestos” aun después de haber sido convertido en obra.

Requerimiento:

Una vez confirmada la obra, el presupuesto debe eliminarse de la lista.

Alternativamente, puede quedar registrado como "convertido" para historial, pero no debe mostrarse en la interfaz.

Acción recomendada en backend:

python
Copiar
Editar
presupuesto.delete()
# o
presupuesto.estado = "convertido"
presupuesto.save()
Acción recomendada en frontend:

Excluir presupuestos con estado “convertido” del listado de presupuestos.

🟡 1. Selección de etapas antes de confirmar como obra
Situación actual:
El sistema carga automáticamente todas las etapas predefinidas al confirmar una obra.

Requerimiento:

El usuario debe poder seleccionar qué etapas incluir, antes de confirmar.

Solución propuesta:

Al hacer clic en "Confirmar como Obra", mostrar un modal con checkboxes de las etapas disponibles.

Enviar solo las etapas seleccionadas al backend.

Crear solo esas etapas en la obra.

Ejemplo de código frontend (pseudo):

html
Copiar
Editar
<form>
  <input type="checkbox" name="etapas" value="estructura"> Estructura<br>
  <input type="checkbox" name="etapas" value="mamposteria"> Mampostería<br>
  ...
</form>
Backend:

python
Copiar
Editar
for etapa in etapas_seleccionadas:
    crear_etapa(etapa)
🟡 2. Agregar tareas como múltiple choice
Situación actual:
El sistema permite agregar tareas escribiendo texto libre.

Requerimiento:

Debe haber una lista desplegable o campo tipo "autocomplete" con tareas predefinidas.

Si la tarea tiene una descripción predefinida, debe autocompletarse al seleccionarla.

Solución propuesta:

Reemplazar el campo de texto actual por un <select> o un componente autocomplete.

Cargar el catálogo de tareas predefinidas desde el backend (o tenerlo cacheado en el JS).

Extra útil:

Incluir una opción: [ ] Tarea personalizada que habilite los campos manuales si el usuario quiere escribir algo nuevo.

🟡 3. Edición de tareas en obra confirmada
Situación actual:
Una vez que la obra está confirmada, no se pueden editar tareas ni etapas.

Requerimiento:

Se debe permitir la edición de tareas para usuarios con permisos (admin o encargado).

Qué se puede editar:

Marcar tareas como completadas

Cambiar horas estimadas

Asignar responsables

Agregar nuevas tareas o etapas si es necesario

Extra (opcional):

Crear un estado intermedio:
“🟡 Planificada” → editable
“🟢 En ejecución” → solo lectura parcial

