Objetivo: Al hacer clic en “Agregar Etapas Seleccionadas” en el Paso 1 (catálogo), deben crearse/recuperarse las etapas vía POST /obras/api/obras/:obra_id/etapas/bulk_from_catalog y guardarse sus IDs reales en window.WIZARD.etapa_ids. Si falla, mostrar el mensaje real del error (no “undefined”).
Arreglar rutas, await/return, y manejo de errores en front y garantizar JSON en backend.

1) Backend (si hace falta)

Verificá que POST /obras/api/obras/<obra_id>/etapas/bulk_from_catalog:

Siempre responda JSON (application/json).

Estructura:

{"ok": true, "creadas":[{"id":..,"slug":"..","nombre":".."}], "existentes":[{"id":..}], "error": null}


En error:

return jsonify({"ok": False, "error": str(e)}), 400


No renderizar HTML en errores.

2) Frontend – reemplazar handler del botón (en templates/obras/detalle.html)

Usar un helper robusto para fetch:

async function fetchJSON(url, opts){
  const r = await fetch(url, opts);
  const txt = await r.text();
  const ct = r.headers.get('content-type') || '';
  if(!r.ok) throw new Error(`HTTP ${r.status}: ${txt.slice(0,300)}`);
  if(!ct.includes('application/json')) throw new Error(`No JSON (${ct}): ${txt.slice(0,300)}`);
  return JSON.parse(txt);
}


Reemplazar la función/handler de Agregar Etapas Seleccionadas por esto (ajustar PREF, obraId, y el selector del botón si difiere):

const PREF = '/obras'; // prefijo real del blueprint
const $err = document.getElementById('wizardError'); // span/div rojo de error si existe
const $ok  = document.getElementById('wizardInfo');  // span/div verde de ok si existe

async function agregarEtapasSeleccionadas(){
  $err && ($err.textContent = '');
  $ok  && ($ok.textContent  = '');

  const checks = [...document.querySelectorAll('.etp:checked')];
  const catalogoIds = checks.map(i => Number(i.dataset.catalogId)).filter(Boolean);

  if(!catalogoIds.length){
    $err && ($err.textContent = 'Seleccioná al menos una etapa del catálogo.');
    return;
  }

  try {
    const url = `${PREF}/api/obras/${window.obraId}/etapas/bulk_from_catalog`;
    console.log('POST bulk_from_catalog', url, catalogoIds);
    const res = await fetchJSON(url, {
      method:'POST',
      headers:{'Content-Type':'application/json'},
      body: JSON.stringify({ catalogo_ids: catalogoIds })
    });

    if(res.ok === false){
      throw new Error(res.error || 'Error desconocido del servidor');
    }
    if(!res || (!res.creadas && !res.existentes)){
      throw new Error('Respuesta inválida del servidor');
    }

    const etapaIds = [...(res.creadas||[]), ...(res.existentes||[])].map(e => e.id).filter(Boolean);
    if(!etapaIds.length){
      throw new Error('No se devolvieron IDs de etapas de la obra');
    }

    window.WIZARD = window.WIZARD || {};
    window.WIZARD.etapa_ids = etapaIds;

    $ok && ($ok.textContent = `Agregadas ${res.creadas?.length||0} | Existentes ${res.existentes?.length||0}`);
    // habilitar Siguiente si estaba deshabilitado
    const btnSig = document.getElementById('wizardBtnSiguiente');
    btnSig && btnSig.removeAttribute('disabled');
  } catch (e){
    console.error('Wizard Paso1 bulk error:', e);
    $err && ($err.textContent = `Error: ${e.message}`);
    alert(`Error al agregar etapas: ${e.message}`); // opcional, si quieren pop-up
  }
}

// Asegurar el binding
const btnAgregar = document.getElementById('btnAgregarEtapasSel');
if(btnAgregar) btnAgregar.onclick = agregarEtapasSeleccionadas;


En Siguiente (Paso 1 → Paso 2), usar window.WIZARD.etapa_ids:

async function irAPaso2Preview(){
  try{
    const ids = (window.WIZARD && window.WIZARD.etapa_ids) || [];
    if(!ids.length) throw new Error('Primero agregá etapas del catálogo');
    const body = { obra_id: window.obraId, etapa_ids: ids };
    const data = await fetchJSON(`${PREF}/api/wizard-tareas/preview`, {
      method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body)
    });
    window.WIZARD.preview = data;
    gotoPaso(2);
  }catch(e){
    console.error('Wizard Paso1 preview error:', e);
    $err && ($err.textContent = `Error: ${e.message}`);
  }
}

3) QA rápido

Abrir wizard → seleccionar 1–2 etapas del catálogo → Agregar Etapas Seleccionadas.
Debe mostrar “Agregadas X | Existentes Y”, no “Error: undefined”.

Siguiente → Paso 2 solo con esas etapas.

4) Entregar

Archivo(s) editados y rutas confirmadas.

Captura de la consola sin errores y del wizard pasando a Paso 2.