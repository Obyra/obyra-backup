Objetivo: dejar el wizard estable.
Errores actuales en consola:

await is only valid in async functions… (wizard.js:… )

window.gotoPaso is not a function

1) Arreglar el await suelto

Buscar cualquier await al tope del archivo o fuera de funciones y envolverlo en una IIFE async o pasarlo a .then().

Preferible (IIFE):

// ANTES (❌ top-level await)
const data = await fetchJSON(api(`obras/api/wizard-tareas/etapas?obra_id=${obraId}`));
renderEtapas(data);

// DESPUÉS (✅)
(async function initWizardModal() {
  try {
    const data = await fetchJSON(api(`obras/api/wizard-tareas/etapas?obra_id=${obraId}`));
    renderEtapas(data);
  } catch (e) {
    showPaso1Error("Error cargando catálogo de etapas", e.message || String(e));
  }
})();

// Asegurá el arranque
if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", initWizardModal, { once: true });
} else {
  initWizardModal();
}


Si hay más top-level await, aplicar el mismo patrón (IIFE) o convertir a .then(...).catch(...).

2) Polyfill robusto de gotoPaso (para tabs Bootstrap o panes)

Definir una vez al inicio del módulo, antes de usarla:

// Polyfill de navegación de pasos
(function ensureGotoPaso(){
  if (typeof window.gotoPaso === "function") return;

  window.gotoPaso = function(step){
    // 1) intentá via Bootstrap Tabs
    const triggers = [
      `[data-bs-target="#wizard-paso${step}"]`,
      `[href="#wizard-paso${step}"]`,
      `[data-bs-target="#paso${step}"]`,
      `[href="#paso${step}"]`,
      `[data-bs-target="#wizardPaso${step}"]`,
      `[href="#wizardPaso${step}"]`,
    ];
    const trigger = document.querySelector(triggers.join(","));
    if (trigger && window.bootstrap?.Tab) {
      window.bootstrap.Tab.getOrCreateInstance(trigger).show();
      return;
    }

    // 2) fallback: mostrar/ocultar panes
    const pane = document.querySelector(`#wizard-paso${step}, #paso${step}, #wizardPaso${step}`);
    if (pane) {
      const container = pane.closest(".tab-content") || document;
      container.querySelectorAll(".tab-pane").forEach(el => el.classList.remove("active","show"));
      pane.classList.add("active","show");
      return;
    }

    console.warn("gotoPaso: pane no encontrado para step", step);
  };
})();


Con esto, cualquier gotoPaso(2|3|4) desde los interceptores ya no rompe aunque cambien los ids (#paso3, #wizard-paso3, etc.).

3) Mantener los interceptores por event delegation (no clonar botones)

Dejar una sola instalación global (con flags) para que no se duplique al re-render:

// FINALIZAR (Paso 3 -> 4)
if (!window.__WZ_FINISH_INSTALLED__) {
  window.__WZ_FINISH_INSTALLED__ = true;
  document.addEventListener("click", async (ev) => {
    const btn = ev.target.closest("#wizard-finish");
    if (!btn) return;
    ev.preventDefault(); ev.stopPropagation(); ev.stopImmediatePropagation?.();

    const payload = collectPaso3Payload();
    try {
      const r = await fetch(api("obras/api/wizard-bulk-create"), {
        method: "POST",
        headers: {"Content-Type":"application/json"},
        credentials: "same-origin",
        body: JSON.stringify(payload),
      });
      const data = await r.json();
      if (!r.ok || !data.ok) throw new Error(data.error || `HTTP ${r.status}`);

      window.__WZ_NAV_LOCK_UNTIL__ = Date.now() + 2000; // anti-rebote corto
      window.gotoPaso?.(4);
    } catch (e) {
      console.error(e);
      alert("No se pudo finalizar. Revisá consola.");
    }
  }, { capture: true });
}

// CONFIRMAR (Paso 4 -> cerrar)
if (!window.__WZ_CONFIRM_INSTALLED__) {
  window.__WZ_CONFIRM_INSTALLED__ = true;
  document.addEventListener("click", (ev) => {
    const btn = ev.target.closest("#wizard-confirm");
    if (!btn) return;
    ev.preventDefault(); ev.stopPropagation(); ev.stopImmediatePropagation?.();

    const modalEl = document.querySelector("#wizard-modal");
    if (modalEl) { try { bootstrap.Modal.getOrCreateInstance(modalEl).hide(); } catch {} }
  }, { capture: true });
}


(Si ya tenés rutas distintas para bulk-create u opciones, solo mantené api(...) con / inicial como venimos usando.)

4) QA que quiero ver después del cambio

Consola limpia (sin “await is only valid…”, sin “gotoPaso is not a function”).

Paso 1: GET /obras/api/wizard-tareas/etapas → 200 JSON.

Paso 2: lista de plantillas del catálogo (nada de DB).

Paso 3: selects “Asignado a” con placeholder “— Seleccioná —”.

Finalizar: aparece POST /obras/api/wizard-bulk-create (o la ruta que uses) → {ok:true}, y navega a Paso 4.

Confirmar: cierra modal, no vuelve a Paso 2.

Nota

No tocar lo que ya está bien (URLs absolutas con api(...), catálogo en Paso 2, delegación ya implementada).
El problema actual es top-level await y la ausencia de gotoPaso global.