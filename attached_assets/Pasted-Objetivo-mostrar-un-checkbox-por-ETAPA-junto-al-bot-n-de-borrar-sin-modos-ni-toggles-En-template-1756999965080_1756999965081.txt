Objetivo: mostrar un checkbox por ETAPA junto al botón de borrar, sin modos ni toggles.

En templates/obras/detalle.html, en el header de cada etapa (donde está el tachito), agregar el checkbox antes del botón borrar:

<div class="stage-actions d-flex align-items-center gap-2">
  <!-- ✅ checkbox fijo para selección múltiple de ETAPAS -->
  <label class="form-check m-0">
    <input type="checkbox" class="form-check-input stage-check" value="{{ etapa.id }}">
  </label>

  <!-- tu dropdown de estado -->
  {{ ... }}

  <!-- tu botón de borrar individual -->
  <button class="btn btn-danger btn-sm">…</button>
</div>


Importante: la clase del input debe ser stage-check (el JS la usa).
No pongas d-none ni wrappers raros.

JS (si no está): contador y borrado en lote

<script>
(function(){
  const btnDelete = document.getElementById('btn-stage-delete'); // "Eliminar seleccionadas (0)"
  function checks(){ return Array.from(document.querySelectorAll('.stage-check')); }
  function selectedIds(){ return checks().filter(c=>c.checked).map(c=>c.value); }
  function updateBtn(){
    const n = selectedIds().length;
    if (btnDelete) {
      btnDelete.textContent = `Eliminar seleccionadas (${n})`;
      btnDelete.disabled = n === 0;
    }
  }
  document.addEventListener('change', e=>{
    if (e.target?.classList?.contains('stage-check')) updateBtn();
  });
  btnDelete?.addEventListener('click', async (e)=>{
    e.preventDefault();
    const ids = selectedIds();
    if (!ids.length) return;
    if (!confirm(`¿Eliminar ${ids.length} etapas seleccionadas?`)) return;
    const r = await fetch('/etapas/bulk_delete', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({ ids })
    });
    const j = await r.json();
    if (j.ok) location.reload(); else alert(j.error || 'No se pudo eliminar.');
  });
  updateBtn();
})();
</script>


Listo. No hace falta “Seleccionar/Cancelar selección”. (Podés ocultar ese botón si molesta.)

Opción 2 — Con toggle (igual de simple, pero prolija)

Si querés que aparezcan solo al entrar en “Seleccionar”, agregá una clase stage-toggle.

En el header de etapa:

<div class="stage-actions d-flex align-items-center gap-2">
  <label class="form-check m-0 stage-toggle d-none">
    <input type="checkbox" class="form-check-input stage-check" value="{{ etapa.id }}">
  </label>
  <!-- estado + tachito -->
</div>


JS:

<script>
(function(){
  const btnSelect = document.getElementById('btn-stage-select');   // "Seleccionar"
  const btnCancel = document.getElementById('btn-stage-cancel');   // "Cancelar selección"
  const btnDelete = document.getElementById('btn-stage-delete');

  const toggles = ()=> Array.from(document.querySelectorAll('.stage-toggle'));
  const checks  = ()=> Array.from(document.querySelectorAll('.stage-check'));
  const selectedIds = ()=> checks().filter(c=>c.checked).map(c=>c.value);

  function updateBtn(){
    const n = selectedIds().length;
    btnDelete.textContent = `Eliminar seleccionadas (${n})`;
    btnDelete.disabled = n===0;
  }
  function show(on){
    toggles().forEach(t => t.classList.toggle('d-none', !on));
    if(!on) checks().forEach(c => c.checked=false);
    updateBtn();
  }

  btnSelect?.addEventListener('click', e=>{ e.preventDefault(); show(true); });
  btnCancel?.addEventListener('click', e=>{ e.preventDefault(); show(false); });
  document.addEventListener('change', e=>{ if(e.target?.classList?.contains('stage-check')) updateBtn(); });
  btnDelete?.addEventListener('click', async e=>{
    e.preventDefault();
    const ids = selectedIds();
    if (!ids.length) return;
    if (!confirm(`¿Eliminar ${ids.length} etapas seleccionadas?`)) return;
    const r = await fetch('/etapas/bulk_delete', {
      method:'POST', headers:{'Content-Type':'application/json'},
      body: JSON.stringify({ ids })
    });
    const j = await r.json();
    if (j.ok) location.reload(); else alert(j.error || 'No se pudo eliminar.');
  });
})();
</script>
