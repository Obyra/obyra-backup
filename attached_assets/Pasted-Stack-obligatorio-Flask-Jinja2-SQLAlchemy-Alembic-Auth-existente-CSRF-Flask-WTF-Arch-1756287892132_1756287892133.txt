Stack (obligatorio)

Flask + Jinja2 + SQLAlchemy + Alembic · Auth existente · CSRF (Flask-WTF).
Archivos a S3/MinIO o static/uploads por env.
Tests básicos (Pytest).

Objetivo

Portal de Proveedores: registro/login, perfil, carga de productos con variantes, precios, unidades/medidas, stock y fotos; Q&A; RFQ/Órdenes.

Cobro donde proveedor factura directo al cliente y OBYRA cobra 2% de comisión:

Opción A (online, recomendado): split con Mercado Pago (application_fee = 2%).

Opción B (offline): proveedor marca pago recibido; OBYRA emite Factura de Comisión y concilia.

Modelos (SQLAlchemy) + migración
Proveedores y catálogo

supplier
id, razon_social, cuit, email, phone, direccion, descripcion, ubicacion, estado ENUM('activo','suspendido'), verificado BOOL, mp_collector_id, created_at

supplier_user
id, supplier_id FK, nombre, email UNIQUE, password_hash, rol ENUM('owner','editor'), activo BOOL, last_login

category (si no existe, crear)
id, nombre, parent_id

product
id, supplier_id FK, category_id FK, nombre, descripcion, estado ENUM('borrador','publicado','pausado'), rating_prom NUMERIC(2,1), created_at, updated_at

product_variant
id, product_id FK, sku UNIQUE, atributos_json, unidad, precio NUMERIC(12,2), moneda, stock DECIMAL(12,2), visible BOOL

product_image
id, product_id FK, url, filename, orden INT

product_qna
id, product_id FK, user_id FK NULL, pregunta, respuesta NULL, created_at

Órdenes + comisión

order
id, company_id, supplier_id, total NUMERIC(12,2), moneda, estado ENUM('pendiente','pagado','entregado','cancelado'), payment_method ENUM('online','offline'), payment_status ENUM('init','approved','rejected','refunded'), payment_ref VARCHAR, buyer_invoice_url, supplier_invoice_number, supplier_invoice_url, created_at

order_item
id, order_id FK, product_variant_id FK, qty DECIMAL(12,2), precio_unit NUMERIC(12,2), subtotal NUMERIC(12,2)

order_commission
id, order_id FK, base NUMERIC(12,2), rate NUMERIC(5,4) DEFAULT 0.02, monto NUMERIC(12,2), iva NUMERIC(12,2), total NUMERIC(12,2), status ENUM('pendiente','facturado','cobrado','anulado'), invoice_number, invoice_pdf_url, created_at

(opcional wallet) supplier_payout
id, supplier_id, order_id?, tipo ENUM('ingreso','deuda','pago_comision'), monto, moneda, saldo_resultante, nota, created_at

Índices: supplier_user.email UNIQUE, product (supplier_id, estado), product_variant.sku UNIQUE, order (supplier_id, estado).

Autenticación proveedor

Blueprint supplier_auth:

GET/POST /proveedor/registro

GET/POST /proveedor/login · POST /proveedor/logout
Session: supplier_user_id, supplier_id. Decorador @supplier_login_required.

Blueprints y rutas
Público (comprador)

/market (listar/buscar con filtros: categoría, ubicación, verificado, precio)

/market/producto/<id> (variantes, fotos, Q&A, RFQ/Agregar a carrito)

Portal Proveedor (/proveedor — requiere login proveedor)

GET /proveedor (dashboard: métricas, productos, RFQ/Órdenes)

GET/POST /proveedor/perfil (datos fiscales y de contacto, logo)

Productos

GET /proveedor/productos

GET/POST /proveedor/productos/nuevo

GET/POST /proveedor/productos/<id>/editar

Variantes: POST /proveedor/productos/<id>/variantes/nueva, POST /proveedor/variantes/<var_id>/editar, POST /proveedor/variantes/<var_id>/(pausar|publicar|eliminar)

Imágenes: POST /proveedor/productos/<id>/imagenes/subir, POST /proveedor/imagenes/<img_id>/(orden|eliminar)

Estado: POST /proveedor/productos/<id>/(publicar|pausar|borrar)

Q&A

GET /proveedor/qna · POST /proveedor/qna/<qna_id>/responder

RFQ / Órdenes

GET /proveedor/rfqs, GET /proveedor/rfqs/<id>

GET /proveedor/ordenes, GET /proveedor/ordenes/<id> (ver items, subir factura al cliente, marcar pago si offline, ver comisión)

Comprador (empresa)

GET /market/carrito, POST /market/checkout (crea order)

GET /market/orden/<id> (estado, pago, adjuntos)

Admin

GET /admin/proveedores (verificar/suspender)

GET /admin/liquidaciones (comisiones por estado; “marcar cobrado” si offline)

Cobro y Comisión 2%
Opción A — Online con split (Mercado Pago)

Crear checkout: POST /market/orden/<id>/checkout

application_fee = round(order.total * 0.02, 2)

collector_id = supplier.mp_collector_id

Guardar init_point y redirigir.

Webhook: /webhooks/mp

En payment=approved:

order.payment_status = 'approved', order.estado = 'pagado', set payment_ref.

Calcular/crear order_commission (base=order.total, rate=0.02, monto, iva si aplica) con status='facturado'.

Generar PDF “Factura de Comisión” (WeasyPrint) OBYRA→Proveedor, guardar invoice_pdf_url y invoice_number.

Pantallas: mostrar estado de pago y links a comprobantes en orden (comprador y proveedor) + sección “Liquidaciones/Comisiones” en portal proveedor.

Opción B — Offline con conciliación

En orden del proveedor: botones “Marcar pago recibido” + subir factura al cliente (PDF/JPG).

Backend: crear/actualizar order_commission con base=total, rate=0.02, iva, total.

order_commission.status='pendiente' → mostrar “Pagar comisión ahora” (instrucciones/CBU o link a cobro MP simple por el monto de comisión).

Admin puede marcar cobrado → status='cobrado'.

Notas contables

OBYRA emite factura de comisión al proveedor (no al comprador).

Si la comisión es “IVA incluido”, aplicar gross-up según indique contador (dejar función compute_commission(base, rate, iva_included=False)).

Validaciones clave

Publicar producto sólo si: ≥1 variante visible con precio + unidad + stock, y ≥1 imagen.

SKU único global.

Q&A: sólo el proveedor dueño responde.

Seguridad de rutas por rol y propiedad (supplier_id de sesión debe coincidir).

Límite y tipo de archivo en imágenes (jpg/jpeg/png/webp, máx 10 MB).

Redondeo a 2 decimales; idempotencia en webhook por payment_id.

Plantillas (Jinja2) a crear

templates/proveedor/{login.html, registro.html, dashboard.html, perfil_form.html}

templates/proveedor/{productos_list.html, producto_form.html, variantes_form.html, imagenes.html}

templates/proveedor/{qna_list.html, rfqs_list.html, rfq_detail.html, ordenes_list.html, orden_detail.html}

templates/pdf/commission_invoice.html (para WeasyPrint)

Variables de entorno
PLATFORM_COMMISSION_RATE=0.02
STORAGE_BACKEND=local   # o s3
S3_ENDPOINT=...
S3_BUCKET=obyra
S3_ACCESS_KEY=...
S3_SECRET_KEY=...

# Mercado Pago
MP_ACCESS_TOKEN=...
MP_WEBHOOK_SECRET=...

Seed (demo)

1 supplier verificado + supplier_user owner.

5 categorías (Materiales, Maquinarias, Herramientas, EPP, Profesionales).

6 productos con variantes, precios y fotos.

1 orden demo (para ver flujo de comisión).

Hecho / Criterios de aceptación

Proveedor puede registrarse, loguearse, completar perfil.

Puede crear/editar productos, variantes, precios/unidades/stock, fotos, y publicarlos/pausarlos.

Comprador puede buscar/ver productos, armar carrito y crear orden.

Opción A: checkout MP con split 2% funcionando + webhook que genera Factura de Comisión (PDF) y actualiza estados.

Opción B: flujo offline para marcar pago, subir factura al cliente y gestionar comisión pendiente → cobrada.

Vistas de Q&A, RFQ/Órdenes en portal proveedor; Liquidaciones con link a PDF.

README con setup, migraciones, env vars y colección Postman.