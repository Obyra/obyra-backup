Hola! En consola veo que getTareasSeleccionadasPaso2() devuelve []. El problema es el selector: estamos buscando #wizardPaso2 .tarea-checkbox:checked pero los inputs no llevan esa clase (o el id del contenedor no coincide).

1) Arreglar selector (robusto) o agregar clase

Opción A (robusto, no depende de la clase):

function getTareasSeleccionadasPaso2(m) {
  const marked = m.querySelectorAll('#wizardPaso2 input[type="checkbox"]:checked');
  return [...marked].map((cb, i) => {
    const label = cb.closest('.form-check')?.querySelector('label')?.textContent?.trim()
               || cb.value || `Tarea ${i+1}`;
    return {
      id: cb.dataset.id || cb.value || `t${i+1}`,
      nombre: cb.dataset.nombre || label,
      etapa_slug: cb.dataset.etapa || ''
    };
  });
}


Opción B (si querés mantener la query original): cuando renderizan cada tarea en Paso 2, asegúrense de poner:

<input type="checkbox"
  class="form-check-input tarea-checkbox"
  data-id="{{t.id}}"
  data-nombre="{{t.nombre}}"
  data-etapa="{{t.etapa_slug}}">

<label class="form-check-label">{{t.nombre}}</label>


y que el contenedor sea id="wizardPaso2" (o cambiar la query al id real).

2) Guardar la selección antes de navegar, y pintar Paso 3
window.WZ_STATE = window.WZ_STATE || { tareasSel: [] };

function connectPaso2Nav() {
  const m   = document.getElementById('wizardTareasModal');
  const btn = document.getElementById('wizardBtnSiguiente');

  // habilitar/deshabilitar “Siguiente”
  const update = () => {
    const n = m.querySelectorAll('#wizardPaso2 input[type="checkbox"]:checked').length;
    btn.disabled = (n === 0);
    btn.classList.toggle('disabled', n === 0);
  };
  m.querySelectorAll('#wizardPaso2 input[type="checkbox"]').forEach(cb => {
    if (!cb.dataset.bound) { cb.dataset.bound = '1'; cb.addEventListener('change', update); }
  });
  update();

  // IMPORTANT: bindear una sola vez
  if (!btn.dataset.bound) {
    btn.dataset.bound = '1';
    btn.type = 'button';
    btn.onclick = (ev) => {
      const seleccion = getTareasSeleccionadasPaso2(m);
      console.log('Paso2→3 seleccion:', seleccion);   // <-- verificar largo acá
      if (!seleccion.length) return;
      ev.preventDefault();
      WZ_STATE.tareasSel = seleccion;
      gotoPaso(3);
      renderPaso3(WZ_STATE.tareasSel);
    };
  }
}

3) Render Paso 3 (ya lo tenemos, sólo asegurar que recibe array ≠ 0)
function renderPaso3(tareas) {
  const m     = document.getElementById('wizardTareasModal');
  const paso3 = m.querySelector('#wizardPaso3,[data-paso="3"]');
  const tbody = paso3.querySelector('tbody');

  tbody.innerHTML = tareas.map((t,i)=>`
    <tr data-id="${t.id}">
      <td>${t.etapa_slug || '-'}</td>
      <td>${t.nombre}</td>
      <td><input type="date" class="form-control form-control-sm" name="rows[${i}][inicio]"></td>
      <td><input type="date" class="form-control form-control-sm" name="rows[${i}][fin]"></td>
      <td><input type="number" step="0.5"  min="0" class="form-control form-control-sm" name="rows[${i}][horas]"></td>
      <td><input type="number" step="0.01" min="0" class="form-control form-control-sm" name="rows[${i}][cantidad]"></td>
      <td><input type="text" class="form-control form-control-sm" name="rows[${i}][unidad]"></td>
      <td><input type="text" class="form-control form-control-sm" name="rows[${i}][asignado]"></td>
      <td>
        <select class="form-select form-select-sm" name="rows[${i}][prioridad]">
          <option value="media" selected>Media</option>
          <option value="alta">Alta</option>
          <option value="baja">Baja</option>
        </select>
      </td>
    </tr>
  `).join('');

  const btn = document.getElementById('wizardBtnSiguiente');
  btn.disabled = tareas.length === 0;
  btn.classList.toggle('disabled', tareas.length === 0);
  btn.type = 'button';
  if (!btn.dataset.boundStep3) {
    btn.dataset.boundStep3 = '1';
    btn.onclick = (e) => { if (tareas.length) { e.preventDefault(); gotoPaso(4); } };
  }

  const back = document.getElementById('wizardBtnAnteriorPaso3');
  if (back && !back.dataset.bound) {
    back.dataset.bound = '1';
    back.onclick = (e) => { e.preventDefault(); gotoPaso(2); };
  }
}

4) Evitar re-cargar Paso 2 al hacer Siguiente

loadTareasWizard() sólo debe llamarse al entrar a Paso 2 desde Paso 1.

No la vuelvan a ejecutar en el click de “Siguiente”.

Usar dataset.bound como en el código para no duplicar listeners.

5) Cómo lo validamos rápido

En Paso 2, en consola:

document.querySelectorAll('#wizardPaso2 input[type="checkbox"]:checked').length


→ Debe dar el número que marcaste.
Al clickear Siguiente, ver en consola:

Paso2→3 seleccion: (N) […]


y en Paso 3 la tabla debe tener N filas.

La advertencia “A listener indicated an asynchronous response…” es de una extensión del navegador; no afecta al wizard.

¡Gracias!