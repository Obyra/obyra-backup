Bug: El catálogo se carga bien (15 etapas) y el contador funciona, pero al presionar Siguiente no pasa al Paso 2. En consola, todas estas funciones están undefined: applyCatalogAndAdvance, applyCatalog, gotoPaso.
Esto quedó sin exportar cuando movimos el código a static/js/wizard.js.

Qué hay que hacer en static/js/wizard.js:

Exponer funciones globales:

window.getEtapasSeleccionadas = function() {
  return [...document.querySelectorAll('#wizardTareasModal .etapa-checkbox:checked:not(:disabled)')]
         .map(cb => cb.dataset.slug).filter(Boolean);
};

window.gotoPaso = function(n) {
  const modal = document.getElementById('wizardTareasModal');
  const panes = [...modal.querySelectorAll('[data-paso], [id^="wizardPaso"]')];
  panes.forEach(el => {
    const num = Number(el.getAttribute('data-paso') || (el.id.match(/wizardPaso(\d+)/)||[])[1]);
    el.classList.toggle('d-none', num !== n);
  });
};

window.applyCatalogAndAdvance = async function() {
  const slugs = window.getEtapasSeleccionadas();
  if (!slugs.length) return;
  // TODO: si hay endpoint para persistir, llamarlo aquí con obra_id + slugs.
  // Ej.: await fetch('/obras/api/wizard-tareas/aplicar', {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({obra_id, slugs})});
  window.gotoPaso(2);
};


Conectar el botón Siguiente a esa lógica (reusar el botón verde “Agregar…”):

const btnSig = document.getElementById('wizardBtnSiguiente');
const btnAdd = document.getElementById('btnAgregarEtapas'); // asegurate que tenga este ID en el template
btnSig?.addEventListener('click', (ev) => {
  const n = document.querySelectorAll('#wizardTareasModal .etapa-checkbox:checked:not(:disabled)').length;
  if (n > 0) {
    ev.preventDefault();
    btnAdd?.click();              // aplica selección
    window.applyCatalogAndAdvance();
  }
});


Verificar que los contenedores de pasos tengan data-paso="1", data-paso="2", etc., o IDs wizardPaso1, wizardPaso2, etc., para que gotoPaso() funcione.

Mantener lo ya corregido:

Normalización del API (json.etapas_catalogo, json.etapas_creadas).

“Seleccionar/Deseleccionar” ignora :disabled.

updateSelectionCounter() habilita/deshabilita Siguiente según selección.

Con esto, al seleccionar ≥1 etapa, Siguiente aplica la selección y pasa a Paso 2.