Asunto: SEV-1 – Regresión crítica en wizard de creación de tareas – Solicito rollback inmediato

Resumen:
El wizard de “Crear Tareas en Lote” dejó de funcionar. Antes completaba todo el flujo (Paso 1 → Paso 2 → Paso 3 → Confirmar). Ahora, en el Paso 2 el panel “Tareas Seleccionadas” queda vacío y no avanza al Paso 3.

Severidad: SEV-1 (regresión en producción / bloqueo operativo)

Impacto: No podemos planificar tareas por etapa ni registrar avances del operario.

Pasos para reproducir:

Abrir wizard → Paso 1: seleccionar 1–2 etapas → “Siguiente”.

Paso 2: aparecen las plantillas; marcar varias tareas.

El panel “Tareas Seleccionadas” queda en “Ninguna tarea seleccionada” y “Siguiente” no navega a Paso 3.

Evidencia de consola (actual):

“✅ WIZARD: 15/22 plantillas cargadas exitosamente”

“⚠️ WIZARD: Panel ‘Tareas Seleccionadas’ no encontrado en DOM”

Inspección de checkboxes: nameAttr: null, valueAttr: '…-*-…', dataTaskId: null, dataTaskName: null.

Diagnóstico probable: Cambios recientes en static/js/wizard.js (Paso 2) alteraron atributos y/o listeners. El HTML se loguea con IDs correctos pero en el DOM final faltan name="tasks[]", data-id/data-nombre y el listener que actualiza el panel.

Lo que necesito que hagan (rollback):

Rollback del branch principal (main) al último commit estable anterior a la regresión.

Commit sugerido como estable: ba5a36c45d27394b5e1f5a5ab54cd0a0bfecd20b (fecha aprox. 2025-09-19 02:28 UTC; mensaje “Fix error in wizard when selecting project stages to add”).

Si ese hash no está, retroceder 1–3 commits hasta que el flujo vuelva a funcionar.

Freeze de main (sin pushes nuevos) y crear rama de trabajo para el fix: fix/wizard-regression-sep19.

Redeploy y validar con QA.

Criterios de cierre (QA):

En Paso 2 el panel lista 2–3 tareas marcadas (nombre correcto).

“Siguiente” navega a Paso 3 mostrando esas tareas para completar (inicio/fin, horas, unidad, responsable, usuario, fotos).

En Network, el request lleva tarea_ids correctos.

En el dashboard del operario aparecen las tareas asignadas.

Notas:

No ejecutar “optimizaciones” ni hotfixes parciales. Necesitamos volver al estado que funcionaba y luego trabajar el refactor en una rama aparte.