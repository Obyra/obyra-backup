name: Database CI

on:
  pull_request:
    paths:
      - 'alembic/**'
      - 'infra/sql/**'
      - 'docs/db/**'
      - '.github/workflows/db-ci.yml'
      - 'Makefile'
      - 'README.md'
  push:
    branches:
      - codex/db-blueprint

jobs:
  migrations:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: obyra_ci
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/obyra_ci
      ALEMBIC_DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/obyra_ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install alembic psycopg[binary]

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 3
          done

      - name: Ensure schema exists
        run: psql postgresql://postgres:postgres@localhost:5432/obyra_ci -c "CREATE SCHEMA IF NOT EXISTS app;"

      - name: Upgrade to head
        run: alembic upgrade head

      - name: Downgrade last revision and re-upgrade
        run: |
          alembic downgrade -1
          alembic upgrade head

      - name: Verify app schema
        run: |
          psql postgresql://postgres:postgres@localhost:5432/obyra_ci -t -c "SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'app';" | grep app
